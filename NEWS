217
* migrate from GConf to Gio.Settings (walter)

216
* conversion to GTK3 (zeecoder)
* update repository field in activity.info

215
* fix error on fb_plugin menu creation  (AlanJAS)
* fix get_endswith_files function (AlanJAS)
* fix parameter on cancel_plugin_install call (AlanJAS)
* remove duplicated import (AlanJAS)
* better handle of temporary folder use (AlanJAS)
* fix when dbus is not supported (AlanJAS)
* workarround for gtk-xft-dpi possible error (AlanJAS)
* simplify is_writeable function (AlanJAS)
* create svg surface only when export (AlanJAS)
* new translations (Chris Leonard)
* fix show show samples in gnome (AlanJAS)
* update logo.boxes with BOX (AlanJAS)
* Fix bug introduced in 70e9d98 for samples picker. (Icarito)
* Add feature to export blocks as image. (Icarito)
* Add uri handler (Icarito)
* fix logic of plugin active (AlanJAS)
* show all plugins by default (AlanJAS)
* fixes in taplugin (AlanJAS)
* check for None case (Walter Bender)
* pep8 fixes; using single quotes where available (Walter Bender)
* make plugin global to python code (AlanJAS)
* fix typo (AlanJAS)
* remove glob dependency (AlanJAS)
* simplify menubuilder (AlanJAS)
* removing has_toolbarbox (AlanJAS)
* Remove suspicious code (rbuj)
* workarround for pyexported path problem (AlanJAS)
* fix error of no menu in pyexported (AlanJAS)
* updates to hi.po
* tweaks to converter block code: use existing turtle graphics canvas
  (Walter Bender)
* use TB instead of TA (Walter Bender)
* lowercased colors names in new adapter block (Rafael Cordano)
* Added apater color block (Rafael Cordano)

214
* Updated translations
* Added repository to activity.info

213
* Missed updating one import after utils moved to TurtleArt/

212
* Configuration clean up by Daniel Drake.

211
* Better handling of plugins (Alan Aguiar)

210

BUG FIX:
* Add broot path when exporting to Python.

209

ENHANCEMENT:
* Add export SVG and Icon to GNOME menu (Alan Aguiar)
* New example project: pinwheel
* Save and restore private block data

BUG FIXES:
* Fine-tune some block label positioning
* Use unique name (by user) for tmp files for multiuser systems (#4788)
* Fix regression in saving to SVG
* Fix regression in paste from GNOME
* Fixed problem with camera crash (SL#2624)

208

ENHANCEMENT:
* Expand dock for oversized arguments in fill_screen block (et al.)

207

ENHANCEMENT:
* Added 'private' attribute to block class for plugins

BUG FIXES:
* Rescale constants when rescaling coordinates
* Rescale mouse coordinates to match current scale

206

ENHANCEMENTS:
* New translations
* Slight speed up when loading large projects
* Added set_font block
* Added ASCII Art example
* Autosave in GNOME (Sugar version already autosaves)
* Add Alt-s keyboard shortcut to stop turtle (w/Andres Aguirre)

BUG FIXES:
* Set default action (Yes) for save in GNOME (Andres Aguirre)
* Don't try writing to READ_ONLY directories
* Don't try writing to READ_ONLY files
* Fix problems with PO files

205

ENHANCEMENTS:
* Use clamp style for start and action stacks
* Warn user when running empty start stack
* More "turtle cards"

BUG FIXES:
* Don't reset timer on clear (w/Alan Aguiar)
* Catch exceptions in Facebook upload (#SL )

204

ENHANCEMENTS:
* Added new Python block example: text_line.py
* Added new "simple" Sierpinski triangle example (w/Bernie Innocenti)

BUG FIXES:
* Fixed regression in trash due to v203
* Fixed regression in loading of media blocks
* Fixed regression in picture block prototypes
* Fixed regression in journal blocks
* Fixed regression in bulletlist blocks
* Fixed problems with Media About Me example program
* Fixed problem with Sensor Follow Me example program
* Fixed problem with Media Journal Stats example program
* Moved data file to samples/data

203

ENHANCEMENT:
* Add support for a "vector" datatype (used by the "food" plugin)

BUG FIX:
* Fix problem with duplicate blocks (e.g., start) when restoring from
  the Trash Palette (w/Ignacio Rodriguez)

202

ENHANCEMENT:
* Make default fillscreen match default background color (light blue)

BUG FIX:
* Update remote turtle before drawing text
* Fixed regression in save to ODP code

201

ENHANCEMENT:
* New sample program: plot global tempuratures (temperature data from
  http://eesc.columbia.edu/courses/ees/climate/labs/globaltemp/data/
  global_temp.xls)

BUG FIXES:
* Fixed problem with turning off hover help (Alan Aguiar)
* Fixed problem with starting plugins from exported Python code
* FIxed problem with label offset (SL #4754)

200

BUG FIXES:
* Fixed regression in python export due to typo
* Fixed regression in boolean operators due to ColorObj class
* Fixed block scaling problem

199

ENHANCEMENTS:
* Use journal or file block for all media types
* Play audio and video from the web

BUG FIXES:
* Eliminate extra space around protoblock labels
* Code cleanup: separate classes for Selectors and PaletteViews
* Use built-in Python mimetype processing
* Cleaned up gplay code (uses debug_output)

198

BUG FIXES:
* Fixed bug with color constants when used with push/pop and boxes
* Fixed bug with hover help in GNOME (Alan Aguiar)

197

BUG FIX:
* Fixed problem with dragging canvas while programming is running

196

ENHANCEMENTS:
* New translations
* Export project as Sugar icon (Jorge Alberto Gómez López)
* Export project as ODP (Jorge Alberto Gómez López)

BUG FIXES:
* Fixed problem with Returns in action and box names (as reported by quozi)
* Fixed problem with label positioning on some blocks
* Fixed rendering problem with filled shapes using arcs
* Fixed problem with sharing filled shapes using arcs
* Make save_as_icon button insensitive when no svg output
  available (Ignacio Rodriguez)
* Make save_as_ODP button insensitive when no saved pictures
  available (Ignacio Rodriguez)

195

ENHANCEMENTS:
* New translations

BUG FIXES:
* Added missing parens for some binary operations in Python export
* Fixed positioning of help messages (#4679)

194

ENHANCEMENTS:
* Added URL block (Scimonster)
* Save/restore palette settings in GConf
* Add confirmation when emptying trash in GNONE version (Alan Aguiar)
* Add load/save plugin dialog to GNOME version (Daniel Francis)
* Add busy cursor when projects are being prepared to run
* Reworked Duplicate Blocks warning graphic to reflect current block shapes
* Refactor until block shape to better reflect flow logic
* Enabled load file to heap/save heap to file to use the Sugar journal
* New translations

BUG FIXES:
* Fixed shade block dock settings (Alan Aguiar)
* Fixed bug in empty trash (Alan Aguiar)
* Set active turtle after 'clean' in exported Python code
* Execute 'until' body once before entering loop in exported Python code
* Fixed problem with running_blocks flag not being cleared (cause of spurious
  "hit stop button" messages.
* Fixed problem with errant text entry widget on run.
* Fixed problem with text wrap of SVG output #1856 (Jorge Alberto Gómez López)

193

ENHANCEMENTS:
* Merged Marian Zepf's export Python branch (This is really fun. Give it a try.)
* Added busy cursor while project is loading from store
* Added tabbing through palette proto-blocks
* New sample program from Cynthia Solomon
* Logging errors in project metadata for making learning visible
* New translations

BUG FIX:
* Prevent text blocks from docking to blocks requiring numeric arguments

192

ENHANCEMENTS:
* New sample program (Snake game)
* Refactored sensors-follow-me example
* New translations
* Moved save snapshot button to Load/Save palette (Users were confusing it
  for the save image button.)
* New blocks on extras palette: load_file_to_heap and save_heap_to_file
* Added confirmation alert to empty trash block
* Dismiss samples store by clicking on canvas
* Reordered layout of extras palette to better commodate new blocks

BUG FIXES:
* Fixed regression in Sugar 84 support
* Fixed problem with GNOME due to Sugar button check (Alan Aguiar)
* Fixed label updates on mouse x, mouse y, and keyboard
* Fixed bug with see block
* Fixed bug in sharing filled shapes

191

ENHANCEMENTS:
* New sample programs (Kyoto flowers)
* New translations
* Add support for querying remote turtle position, heading

BUG FIXES:
* Fixed collaboration bug (#4631)
* Fixed i18n problem with 'select palette' block
* Fixed problem with load block 'turtle'
* Fixed problem with hover-help toggle
* More robust error handling for plugins

190

ENHANCEMENT:
* Set maximum number of participants

BUG FIX:
* Fix problem with null index when action and store-in blocks are
  missing arguments.

189

ENHANCEMENT:
* New sample project

BUG FIXES:
* Fix alignment problem with GNOME version
* Fix problem with default coordinate system


188

ENHANCEMENT:
* Add labels to Cartesian coordinate grid

BUG FIXES:
* Ensure that default coordinate scale is 1 (pixel mode)
* Adjust pen size to coordinate scale

187

ENHANCEMENTS:
* Use icon view for browsing sample projects
* New translations
* New sample progams
* Save coordinate scale with gconf
* Make scaled coordinates +-20 instead of +-100

BUG FIXES:
* Fixed more bugs in SVG save
* Fixed several bugs in non-interactive mode
* Fixed problem with erratic Cntl-V (SL #2751)
* Fixed problem with missing Stop button when malformed block encountered
  (SL #4522)

186

BUG FIX:
* Use /tmp for creating SVG surface when running from GNOME

185

ENHANCEMENTS:
* New translations
* More sample graphics from turtleart.org
* Added pen state boolean
* Added new sensor-record example (generates turtle art program from mouse movements)
* Some comments added to the code by Marion Zepf

BUG FIX:
* Fixed problem with load block introduced by turtle-centric rebase

184

ENHANCEMENTS:
* New translations
* Internal refactoring in support of a turtle-centric approach to programming

183

ENHANCEMENT:
* New translations

182

ENHANCEMENT:
* New translations

BUG FIXES:
* Fixed problem with initializing trash palette when init_on_start
  flag is set (Alan Aguiar)
* Disambiguation of parent vs activity (Marion Zepf)
* Isolation of GUI to enable non-interactive use of canvas (Marion Zepf)

181

BUG FIX:
* Make sure trash is last palette

180

ENHANCEMENT:
* Faster launch time
* New translations

BUG FIX:
* Catch exception raised when gconf is not available (prevented launch
  on some old systems, e.g., Peru 802)

179

ENHANCEMENT:
* Add option to either open a new project or load a project into an
  existing project

BUG FIXES:
* Restore cursor after aborted chooser dialog
* Fix problem with loading projects from Sugar Journal

178

BUG FIX:
* Add missing import that broke chooser

177

ENHANCEMENT:
* New translations
* Faster startup time

BUG FIXES:
* Fixed Logo export (#4502)
* pep8 and pyflakes cleanup

176

ENHANCEMENT:
* Add facility for saving and restoring individual stacks
* Save status of hover help between sessions
* New translations

175

ENHANCEMENT:
* Power management utility: Alan Aguiar

BUG FIXES:
* Force audio sensors to use single channel on XO 4
* Fix problem with file naming when saving images in GNOME
* Fix problem with file naming when saving Logo code in GNOME
* Use newline (\n) instead of return (\r) in exported Logo code

174

ENHANCEMENTS:
* Always open Turtle Palette after loading new project
* Make shift-palette icons directional
* New translations

BUG FIX:
* Fix typo that prevented palette repositioning to work properly

173

ENHANCEMENTS:
* Increase expand/shrink show/hide dots for easier touching
* Enable canvas dragging with touch
* Update screen constants (e.g., width, height) when screen rotates
* Switch between a toolbar and a palette, depending upon screen aspect ratio

172

ENHANCEMENTS:
* Prevent rearrangement of blocks while program is running
* New translations

BUG FIX:
* Detect XO hardware on some old systems

171

ENHANCEMENTS:
* TurtleArt --> TurtleBlocks
* About TurtleBlocks
* New sample program: calculate and display prime factors
* Facebook upload from GNOME

BUG FIXES:
* Cleaned up some corner cases where NAN errors are not reported
* More efficient calculation of ... in text blocks
* Proper formatting of multi-mime-type field

170

ENHANCEMENTS:
* New translations
* More consistent behavior for color blocks
* Increased contrast for shade block: full range between black and white
* Auto-increment my_box name when creating new prototype box block
* New sample Python project: load data from filesystem
* Use .tb suffix for TurtleBlocks
* Add MAGIC NUMBER support for .tb files
* Convert int args to float when using Python block (#4382)
* Improved behavior of stop button in GNOME (Alan Aguiar)

BUG FIXES:
* Cleaned up some bugs that broke non-interactive mode
* Add warning if use of forever block in non-interactive mode is detected

169

ENHANCEMENTS:
* New translations
* Disable hover help while program is running
* Add sensor support for XO4

BUG FIXES:
* Fixed major memory leak introduced back in Version 123 that was
  causing TA to crash (#4346, #3291).
* Fixed minor memory leak (with help from Alan Aguiar) caused by
  incomplete clean up after hitting stop button.
* Ignore null block definitions (#4316)
* Fixed sensor-block regression on 0.84 system (due to use of
  subprocess.check_output)
* Add sample toolbar to 0.84 toolbars
* Improved detection of host computer (used for sensor blocks) needed
  for XO4 (Gonzalo Odiard)
* Fixed problem with HELP_MSG in GNOME version (Alan Aguiar)
* Fixed problem with .desktop file (Daniel Francis)

168

ENHANCEMENTS:
* New translations
* Expand textview vertically when editing multiline strings
* Add sample python code for accessing Alice engine
* Add new graphic example by Jonny Emerson
* Enable use of Enter on number blocks (#4271)

BUG FIXES:
* Fixed regression in renaming action and box blocks
* Fixed problem with mic boost on XO 1.75 (#4288)
* Set maximum width of string blocks to prevent them from running off screen

167

BUG FIX:
* Fixed rounding error in calculating turtle movement
* Fixed truncation error in display of turtle position
* Fixed some grammatical errors in strings (cjl)
* Fixed inconsistent behaviour of Stop Button when running in GNOME
* Work-around for #3675 (sensor channel swapping on XO 1.75)
* More fine-tuning of on-screen keyboard support

NOTE:
* As of v167, taextras.py has been moved to its own repository

166

BUG FIXES:
* Fixed problem with label alignment on some blocks
* Fixed problem with help label size (#4095)
* Fixed problem inserting blocks into some stacks

165

ENHANCEMENT:
* Remove a dependency on xpdyinfo

164

BUG FIX:
* check dpi to set font scale
* fix "triangle" number block increments

162

ENHANCEMENTS:
* Support for external camera
* New translations
* Accommodations for on-screen keyboard

160

ENHANCEMENTS:
* Add gray as argument to fill screen block
* Added new summary field
* New sample projects for journal analysis
* New translations

158

ENHANCEMENTS:
* New translations

BUG FIX:
* Properly display blocks with four labels
* Don't hide blocks when hitting stop button
* Use different warning messages when plugin fails to import vs load

156

ENHANCEMENT:
* Make button down block a boolean
* New translations
* Restore from trash added as a button to edit toolbar

BUG FIX:
* Check for get_window, not available on some older systems
* Fixed a few corner cases with autogeneration of palette blocks

154

ENHANCEMENT:
* New sample code
* New translations

BUG FIX:
* Add custom storein boxes to palette

152

ENHANCEMENT:
* New sample code
* New translations
* Remove redundant box and action blocks from Block palette
* Sharing turtle shell

BUG FIX:
* Catch some errors in auto-action block generation
* Work around activity version number issue for Sugar 0.88
* Reset color, shade, and gray when using Black or White blocks
* Update labels on named boxes when running in debug mode

149.2

BUG FIX:
* Removed unused import that broke GNOME-only version (w/ rgs)

149.1

ENHANCEMENT:
* Move "sandwich block" to flow palette
* Added support for drag-and-drop of block data from clipboard
* New translations

BUG FIX:
* Fixed problem with nested While loops

149

ENHANCEMENTS:
* Changed flow block artwork to use "clamp style"
* Insert blocks into the middle of a stack
* Moved camera to media palette
* New translations

BUG FIX:
* Fix regression that prevented selected blocks from moving on top of
  all other blocks
* Add box and stack proto blocks to palette on load/copy
* Don't create duplicate start or action blocks with copy/paste

148

ENHANCEMENTS:
* Pen/color palette changes: pen operations on one palette, colors
  on a second palette
* Removed bug from all versions
* New snail icon
* Rabbit and snail change color to indicate run speed
* Clicking on a stack respects current run speed
* Turtle shape more directional
* New copy- and share-block behavior:
   (1) Click on Copy Button (or Share-Block Button);
       the cursor changes to a hand pointer;
   (2) Click on any block or stack of blocks and that stack is
       briefly highlighted and copied to the clipboard (or shared);
   (3) The cursor is changed back to the standard cursor.

BUG FIX:
* Catch unicode error in collaboration code

147

ENHANCEMENTS:
* New translations, including Aymara
* Improved pitch tracking

BUG_FIXES:
* Add flag to initialize palettes on startup (needed by some plugin palettes)
* Palette overflow (#3719)

146

ENHANCEMENTS:
* Add Tony Forster's simulation of math-galton-path.ta to sample programs
* Define general purpose chr and int blocks instead of special purpose
  chr(keyboard) and int(keyboard) blocks
* Highlight all blocks in selected stack
* Update label on Share Button to remind user to select blocks to share
* Move save snapshot button to main toolbar
* Add proto block to blocks palette for named actions
* Add proto box for blocks palette for named boxes
* Added more TRANS notes for i18n

BUG_FIXES:
* Fix bug with nested foerver/while/until (#3699)
* Clean up some strings on currency palettes
* Don't call plugin_stop() twice

145:

BUG_FIXES:
* Use different dispatch code for share (#3685)
* Rescale remote turtle labels (#3684)

144:

ENHANCEMENTS:
* New sample programs (Elver Puerta y Mercedes Vilca Castillo)
* New blocks for keyboard entry (como Raul Hugo)
* Added sharing for speak block
* Added sharing of selected stacks

BUG_FIXES:
* Hide status block when starting execution of blocks (#3682)
* Cleaned up some strings in taextras.py
* Remove flakey save_as_HTML feature

143

ENHANCEMENT:
* New translations, including Quechua

BUG_FIXES:
* More robust handling of xid when playing video
* Disabled canvas dragging on XO hardware (too slow)
* Fixed problem with labels on resistance blocks
* Fixed problem with loading plugins on some systems

142

ENHANCEMENT:
* Improved sensor calibration for XO 1.75 (Thanks to Tony Forster,
  Guzman Trindad, James Cameron, and John Watlington)
* Add media pause, resume, and stop

BUG_FIX:
* Properly offset video window when toolbars are opened/closed or
  window is in fullscreen mode

141

BUG FIXES:
* get_lower() and get_upper() are only available in PyGTK 2.14 and above
* Movies playback works properly (#3166, #3369)
* Don't drag canvas while program is running (interferes with mouse
  sensor blocks)

140

ENHANCEMENTS:
* New translations

BUG FIXES:
* Blank out coordinate display when data are invalid (#3599)
* Import CalledProcessError in audiograb.py

139

ENHANCEMENTS:
* Autohide blocks when running program from "Rabbit"
* Autoshow blocks on Stop or Error
* Move Show-Blocks button to Stop-Turtle button on main toolbar
* Add --run flag to GNOME version for autorun on launch
* New plugin strings
* New translations
(with help from Alan Jhonn Aguiar Schwyn and Andres Aguirre)

BUG FIX:
* Fix spacing of GNOME toolbar
* Use black list instead of white list to specify when to not
  right-justify the Stop button (#3574).
* Expose white list for blocks that can take either string or numeric
  arguments
* Reset default background color on clean/erase
* Properly update turtle coordinates on View toolbar


138

ENHANCEMENTS:
* New translations
* Replace ambiguous Sensor palette icon with Sensor icon from Measure
* Renamed sample programs by genre, e.g., graphics, sensors, math, etc.
* Canvas can be dragged
* Add alerts after successful saves

BUG FIX:
* Added more robust sprite 'hit" detection (#3415)
* Force Cairo refresh after fill block (#3422)
* Refactoring of save to svg code to use Cairo surface (#3423, #3424)

137

ENHANCEMENTS:
* New help system inspired by Gonzalo Odiard's help in SimpleGraph 
  (includes end run around #2633)
* Force standard palettes to appear before plugin palettes
* New mechanism for loading plugins from the Journal (with help from
  Alan Jhonn Aguiar Schwyn)
* Toolbars too large to fit on the screen can be shifted
* Help, print, and status blocks expand to full width on wide screens
* New translations

BUG FIX:
* Fixed palette initialization problem for plugins using hidden blocks
* Fixed typo (#3330) in help string for NXT plugin
* Reverted some syntax changes to support old XO images still using Python 2.5
* Catch AttributeError when palette refresh fails
* Replace deprecated class commands with subprocess
* Fixed turtle inverted-color problem (#3396)

136

ENHANCEMENTS:
* Add method to retrieve plugin instance (Alan Jhonn Aguiar Schwyn)
* New translations

BUG FIXES:
* Fixed regression in resistance sensor calibration for XO 1.75
* Fixed another problem with expanded compare blocks
* Fixed problem with disappearing blocks due to dragging over hidden palettes

135

ENHANCEMENTS:
* Changed mechanism for handling "hidden" blocks (used by some plugins)

BUG FIX:
* Restore currently selected palette after hide/show palette cycle

134

ENHANCEMENTS:
* Added method to change block color (used by some plugins)
* Added method to set the visibility of palette blocks (used by some plugins)

BUG FIX:
* Fixed typo inadvertently intoduced into plugin strings
* Fixed problem with boolean and compare blocks not expanding properly

133

ENHANCEMENTS:
* New translations
* Added strings used by WeDo plugin
* Added True and False blocks to Numbers palette (only for large screens)
* Added is heap empty block?
* Added support for polynomial objects in math libraries
  (used by nutrition plugin)

132

BUG FIX:
* Fixed problem with exporting of Logo code introduced in v131
* Capture "special blocks" in used block list
* Fixed typo in local variables causing voltage sensing to fail with
  XO 1.75 (#3297)
* Changed light-sensor power_state (deprecated) to level in python
  sample code (OLPC #11485)

131

ENHANCEMENTS:
* Internalized While and Until blocks (no longer macro expansions)
* Simplified keyboard input macro (uses until block)
* Some consolidation of toolbars on smaller displays
* New data-graphing example from ClaudiaU
* New strings for Butia, Follow Me, and Sumo plugins

TOUCH ENHANCEMENTS:
* Added on-screen adjusters for numeric blocks
* Added a mouse-motion threshold for differentiating between a click and a
  drag motion

BUG FIXES:
 * While and Until blocks continue program flow after exiting
 * Until block executes once before test
 * Changed light-sensor power_state (deprecated) to level
 * Switched to panel for Save/Load buttons so that they'd all fit on
   smaller screens

Thanks to Alan Jhonn Aguiar Schwyn for testing many of these changes

130

ENHANCEMENTS:
* Add support for stereo sensor input on XO1.5, XO1.75 hardware
* New translations
* New example program: soundpaint.ta

BUG FIXES:
* More robust initialization of sensors (#552)
* Work around for problem with Journal preview image
* Clean up temporary files left from various export functions
* Fixed layout issue with embedded images in .svg exports
* Fixed regression bug in HTML export

129

ENHANCEMENTS:
* Repositioned labels on if-then-else blocks
* Reskinned turtles now rotate to all angles
* New translations (.aym, .quz, .fr, .da)

128

BUG FIXES:
* Fixed logic error preventing camera capture of multiple frames
* Fixed problem with camera autogain (#2651)
* Don't zoom text in alert blocks (#3175)

Note: Still working on  #2624, repeated show camera fails after awhile

127

ENHANCEMENTS:
* Changed mouse click block to mouse-button down block
* Improved camera plugin: writing directly to a pixbuf

BUG FIXES:
* Fixed problem with missing help strings on XO hardware

126

ENHANCEMENTS
* Added speak block to media palette
* Added sinewave block to media palette
* Added mouse x, y, and click blocks to sensor palette
* Added plugin support for clear method attached to clean block and
  Erase button.

125

BUG FIXES:
Alan Jhonn Aguiar Schwyn uncovered some bugs: some old, some new.
* get_pixel failed on some old Sugar system (fixed with patch from cscott)
* typo in quit_plugin method
* typo in coordinate-rescale callback

124

BUG FIX:
* Fixed problem with overlay grids

123

ENHANCEMENTS
* Using Cairo graphics (#1203)
 - antialiasing
 - rotation of text and images
 - filled arcs

NOTE
* For performance reasons, the coordinate grids are now drawn directly
  onto the turtle canvas. This has two consequences: (1) the grids cannot
  be erased except by erasing the entire screen; and (2) the turtle can
  draw on top of the grid.

BUG FIXES:
* Export as Physics project (#3113) available as a plugin
* i18n enhancement (#3215) consistent use of strings
* Enable delete key on HS keyboard (#3052)

122

ENHANCEMENTS
* New translations

BUG FIX
* Allow pysample/*py files to be loaded into projects from Sugar
* Catch value error in string comparisons with Boolean blocks
* Added missing sugar.datastore imports

121

ENHANCEMENTS
* More consistent block labeling (#3215)

120

BUG FIX
* Removed debugging call that caused "doubling" of arcs #3214

119

ENHANCEMENTS
* Save list of blocks used as a searchable tag in the Journal

BUG FIXES
* Fixed type error introduced to arc commands by patch to address #3164


118

ENHANCEMENTS
* New translations

117

ENHANCEMENTS
* Palettes float while scrolling the canvas so that they are always at
  hand (#3011)
* Added labels for neg. angles to polar coordinate overlay (#2650)
* Enabled Delete key when present (#3052)
* Added sensor.py example to pysamples (#3059)
* New translations

BUG FIXES
* Fixed problem with palette selection on old-style toolbars and GNOME
  version (#3094)
* Reverted patch to address #2633 since it caused Help label to disappear on
  XO 1.75 machines
* Accounted for block overlap in Python load_block.py (#3115)
* Fixed problem with launching in GNOME (#3133)
* Added missing comments to Python block code (#3159)
* Removed misleading tail on remote turtle labels (#3164)
* Fixed rounding error in positioning remote turtles (#3163)
* Consolidated turtle movements to prevent network overload when sharing
  (#3162)

116

ENHANCEMENTS
* New translations

BUG FIX
* Fixed problem with generation of i18n strings

115

ENHANCEMENTS
* Support for light sensor on XO 1.75 hardware
* New translations

BUG FIXES
* Returning float values from sensors as per OLPC #11166

114

ENHANCEMENTS
* Toolbar cleanup to be consistent with new design-team guidelines
* Support for accelerometer on XO 1.75 hardware

BUG FIXES
* Fixed race-condition that sometimes prevented turtle art from
  launching (#3044)

113

ENHANCEMENTS
* Enabled scaling of box-style-media (used to improve the display of
  currency with currency plug-in)
  See http://wiki.sugarlabs.org/go/Activities/TurtleArt#currency
* Update to mn translations

BUG FIXES
* Re-enabled initial setting of a default Palette Toolbar
 (accidentally removed in Version 111 when fixing keyboard acceleration
 problem #2986)
* Fixed problem with scaling some blocks with image overlays

112

ENHANCEMENTS
* Updates to German (DE) and Dutch (NL) translations
* Clean up of block "skin" code to better accomodate plugins
* New currency plugin available in wiki

111

ENHANCEMENTS
* New sample program: urban_landscapes.ta
* New sample program: fractions.ta
* New python block example for csound
* Translation updates for .de

BUG FIXES
* Reverted default action name to 'action' instead of 'stack'
* Reverted accelerator-key work-around (#2050) in light of #2986

110

BUG FIX
* Fixed regression problem with brightness block

109

ENHANCEMENTS

* CM coordinate grid overlay (XO hardware only)

BUG FIXES
* Restored missing localization files
* Only initialize camera if camera block is being used
* Suppress unnecessary debug output from talogo
* Fix hardware detection on some old builds

108

ENHANCEMENTS

* vspace, hspace run stack on mouse click (#2790)
* added clear all button to Trash Palette
* added language support to speak.py sample code
* added 'scratch' and 'hoops' examples

BUG FIXES

* Save to SVG was not working for setxy
* Save to SVG was not working for fill
* Save to SVG was broken for arc

107

ENHANCEMENTS

* Refactoring of block and palette generation to use the plugin
  classes for all blocks. (The goal is to make it easier for end-user
  modifications.)
* Added the ability to add new blocks on the fly (See uturn.py example)
* Added basic-style-3arg block (used by NXT plugin)
* Moved plugin libraries to ./plugins
* Shared turtles are updated after mouse drag (#2687)
* Shared turtles cannot be repositioned remotely (#2687)
* Shared turtles have labels
* Turtles are synchronized when joining share (#2687)
* Comments on usage included in the Python sample code (#2709)
* Using standard Sugar icons for colors and camera
* Refactoring of export Logo code to enable plugins to define new functions
* Value blocks updated properly on first appearance
* Reduced the header size in Python sample code for easier reading (#2748)
* Extend clearscreen to entire canvas (#2745)
* Cleaned up some issues with .es translations (Guzman Trinidad)
* More robust handling of broken projects and unknown block types
* Added hidden blocks when plugin devices are unavailable
* Added new Python example for recording audio

BUG FIXES

* Fixed regression with help messages when running Sugar 0.84 (#2676)
* Fixed problem with selected turtle reverting back to default turtle (#2687)
* Fixed problem with camera block graphic in trash (#2678)
* Fixed regression with camera_plugin after refactoring (#2689)
* Fixed problem with saving/loading extra turtles when nick changes (#2441)
* Fixed problem with displaying large FILO heap (#2751)
* Fixed a problem with tags causing malformed HTML export
* Fixed problem with first sample when using sensors
* Fixed problem with method-name conflict with gtk.widget

PYTHON CODE CHANGE

* Userdefined code gets TurtleWindow instance rather than LogoCode
  instance as first argument. This change was made in order to better
  accommodate and better parallel the new plugin mechanism. Most
  likely, you had been referencing tw, the TurtleWindow instance from
  lc, the LogoCode instance, e.g., lc.tw. Now you can reference tw
  directly, e.g., tw. To reference lc, use tw.lc. Under most
  circumstances, Turtle Art will detect when myblock is looking for lc
  rather than tw and it will pass the correct argument.

106

ENHANCEMENTS

* Added sharing to draw_text, fill_polygon, draw_pixbuf (#2461)
* Added sharing (EXPERIMENTAL) between Gnome and Sugar versions (with Raul
  Gutierrez Segales)
* Added 'time' block for measuring elapsed time (in seconds)
* Added 'brightness' block for reading average camera luminance value
  (with help from Tony Forster and Guzman Trinidad)
* Added camera media block for grabbing images from the camera
* New speak.py sample code for doing text to speech (Tony Forster)
* New load_block.py sample code for programatically creating TA projects
* New psuedo-color.ta example (Tony Forster)
* New love-speaks-volumes.ta example -- use mic input to scale shapes
* New spiralaterals.ta example inspired by Spiralaterals activity
* Added a Media Palette for all media-related blocks and reorganized palettes
  (#2633) for more clarity (Claudia Urrea and Bill Kerr)
* Added offset for second argument in Boolean compare blocks
* More complete translations in Spanish (es) and Italian (it)
* Added plugin support for non-standard devices (camera, sensors, RFID)

BUG FIXES

* Exposed see as an external method (#2542)
* Media type tests on file suffix use lower()
* Added support for localization to GNOME version (Raul Gutierrez Segales)
* Work around for situations where gst is not available
* Fixed problem with displaying Journal preview images in portfolio
* Restore overlay grids on clear
* Fixed problem with help-string wrap width (#2633)
* Added missing dependency to RFID plugin (Emiliano Pastorino)

105

BUG FIXES

* Fixed problem with coordinate overlay mislabelling when rescaling coordinates
* Fixed overflow problem causing Turtle Art to crash after ~50 minutes (#2489)
* Fixed regression with turtle display during Wait
* Display heap with ellipsis to avoid illegible display (#2268)
* New block-highlight scheme (#1709) (with help from Rodrigo Arboleda)

ENHANCEMENTS

* Added support for RFID tag reader (with help from Emiliano Pastorino)
* Added 'Media Wait' block to pause turtle while media is playing

104

BUG FIXES

* Refactoring of audio/video code based on Jukebox (#1613)
* Catch depreciated format during project load (#2501, #2447)
* Reorganized some palettes (flow, portfolio) to fit smaller screen sizes
* Map mouse coordinates to screen coordinates (#2502)
* Also closed #2490, #2475, #2449, and #1057

ENHANCEMENTS

* Sample Python code stored in individual files
* New sample Python code (#548): (copy/paste heap to/from clipboard
  and to/from Journal)
* Sensor calibration for XO 1.5 hardware (Tony Forster)
* Text-only support for RTF files (#893)
* Block at bottom of stack is hidden when stack is 'collapsed' (#2506)
* Palette hides on repeat click of selector (#2505)
* Elimination of redundant Hide Palette button (#2505)
* Spanish translation of new blocks

103

* sensor palette: sound, volume, pitch, resistance, voltage
* menu cleanup: samples on import/export toolbar
* error message when trying to mix and match incompatible blocks
* new DE translations

102

* fixed bug with refactoring of depreciated setxy block

101

* set text color to foreground color (#2448)
* more resilience to bad block descriptions (#2447)
* fixed typo in Python sample code (#2449)
* only allow one start block per project
* show box values on box label
* moved import/export functions off activity toolbar onto journal toolbar
* new DE translations

100

* fixed problem with turtle reskin when scale <= 1 (#2353)
* fixed problems with keyboard commands (#2426)
* documented keyboard shortcuts (Thanks to Tony Forster) See
      http://wiki.sugarlabs.org/go/Activities/TurtleArt#Keyboard_shortcuts
* view source shows project code instead of Logo code (#2204)
* project code has improved formatting for readability (#2204)
* chooser limits choices appropriately, e.g., when looking for Python code,
  it only shows you .py files.
* fixed math Name error problem with imported Python code (#2313)

99

* reskinable turtle (#2353)
* setxy honors pen up/pen down (#2358)
* updated Tamil, Spanish (#2359), and German translations
* expandable two-argument blocks (#2330, #2336)
* updated samples to take advantage of #2330 and removed extra turtles
* removed import numpy to fix #2313 and #2314
* fixed rounding error that prevented max value from being returned by
  random (#2380)
* added locale support for decimal_point rendering

98

* fixed palette selection bug introduced by alpha-value checking

97

* recenter default turtle when dragged onto palette
* removed comment label from collapsible stacks
* made font smaller on the bottom-of-collapsible-stack block (#2305)
* rgs fixed resume problem in GNOME version (#2293)
* checking alpha value to block 'hit' detection (fixes problem with
  selecting the wrong block when blocks wrap around each other).
* trap and display math errors in Python block (#2313)

96

* fixed deleted-turtle ghost bug

95

* some performance enhancements (block creation and stack dragging)
* removed depreciated field from desktop file (Luke Farone)
* fixed problem with setup.py in non-Sugar environments (Luke Farone)
* new example program for turtle sees block
* fixed broken clock example
* catch import error for upload (#2194)
* rescaling of read pixel values (#2188)
* turtle sees block takes into account gray and shade (#2188)
* hide extra turtles on clean (#2191)
* hide coordinate overlays on clean (#2191)
* reset scale, gray on clean (#2191)
* work-around to c-c/c-v toolbar bug (Raul Gutierrez #2050)
* writing config file in config directory (Luke Farone #2193)
* using turtle name to generate color for multiple turtles
* delete turtle when dragged onto the palette (#2191)

94

* added "turtle sees" block
* added read_pixel block
* updated sample images (smaller file sizes)
* updated license for sample images
* updated nl translation
* fixed path problem with Exec in desktop file (Matthew Gallagher)
* fixed path problem with icon in turtleart.py (Matthew Gallagher)
* moved modules to TurtleArt subdirectory
* limit size of upload file (Jamie Boisture)

93

* recenter overlays when window resizes (Jamie Boisture)
* added icon for Desktop mode (Jamie Boisture)
* support for project upload to server for Desktop mode (Jamie Boisture)

92

* fixed sharing bug introduced in v91
* cleaned up cmdline processing

91

* added black and white blocks
* fixed cgi escape bug (#1854)
* fixed bug with overzealous block resizing (#2092)
* speed up of refresh code (expose_cb handling)

90

* fixed problem with keyboard accelerators: Ctrl-C, Ctrl-V, and Alt-Return

89

* added non-interactive mode (with help from Jamie Boisture)
* fix problem with icon in F13
* block scale saved between sessions

88

* alsroot fixed ObjectChooser bug (#2002)

87

* added fill block
* added gray block
* fixed typo in sample code
* added mouse support to sample code (See
  http://tonyforster.blogspot.com/2010/03/mouse-support-in-turtleart.html)

86

* More .es updates

85

* Fixed bug loading floating point numbers from saved projects
* 'store in box' accepts strings and numbers as labels
* New .es translations

84

* merge with mainline

83

* added new user-interface features
 o support for multiple turtles
 o expandable blocks
 o collapsible stacks
 o runtime block highlighting
 o error highlighting
 o trash palette (with restore)
 o palette better integrated into Sugar toolbar
 o variable-length string blocks
 o editable string blocks
 o paste text from Sugar clipboard to string blocks
 o new prefix boolean logic
 o showblock to compliment hideblock
 o fullscreen block
 o Cartesian and polar coordinate blocks
 o color blocks
 o editable macros (used for presentation blocks)
 o labels on coordinate-grid overlays
 o more complete support in non-Sugar environments
 o new (and improved) sample code
 o Logo code for project added to View Source
 o save SVG block lets you generate SVG with Turtle Art
 o improved export-to-HTML logic
 o new translations
 o multi-variable in-line Python-code blocks
 o traceback for checking errors in in-line Python code

* completed a major refactoring of the code
 o download bundle-size is only 40% of previous versions
 o faster first-time launch
 o greatly simplified i18n maintenance
 o easier to extend with new blocks and palettes 

82

* minor updates to Spanish translations

81

* fixed keyboard input bug introduced in v79

80

* new Finnish translations

79

* backspace enabled when entering numbers
* arbitrarily long numeric strings enabled
* fixed Python error in sample code
* clean up of en artwork
* fix bug in load_image
* detecting XO 1.5 hardware for font-scaling problem
* keyboard and gamepad navigation
* expanded hover help
* better logic for block selection used by copy/paste

78

* new artwork for pen palette
* color blocks

77

* hide status block on start up
* save reference to Python code loaded from the Journal

76

* fixed import error in project
* fixed bullets in exporthtml
* added proper scaling for coordinate blocks
* moved status layer forward

75

* Cartesian coordinates overlay
* polar coordinates overlay
* coordinate display on View Toolbar
* Option to rescale coordinate system to 100x100 on View Toolbar
* Reordered the palettes (moved misc. down)

74

* load start block for new projects
* fixed bug with reloading descriptions from Journal
* added hover help to command line version
* initiate the import Python chooser when Python block is clicked
* saving pastable code to html export
* fixed some problems in export to HTML code

73

* raise status flag when catching overflow error
* clean up of de, it, fr, es artwork
* fixed bug related to blocks running off the left edge
* cleaned up command-line code

72

* cleaned up code for pre-0.86 palettes
* fixed keyboard shortcut bug in pre-0.86 palettes
* fixed problem with int(None) in unselect
* fixed problem with int(float) in unselect
* fixed fence-post problem with searching off the end of blocks
* work-around Rainbow problem with tmpfile

71

* updated fr translations
* more sample Python code
* limiting abs(number) to max of 1000000 to prevent OverflowErrors

70

* new translations/artwork for vi, it, fr
* added linewrap to help label (with rgs)
* added label to Help toolbar (to work around bug with small displays)
* caught some exceptions that prevented TA from running outside of Sugar
* fixed bug preventing simple save to HTML for pre-086 systems
* added missing icon for Save from Journal

69

* chmod +x svg factory
* added missing import gettext from talogo.py
* renamed xo-man to xo-child
* caught missing attribute when running from outside of Sugar
* new translations/artwork for de, fr, es, it
* added translator comments
* fixed several bugs in export to Logo code

68

* made case consistent on tool tips
* fixed bug re i18n in debug panel
* new artwork for es and fr
* fixed some problems with svg factory
* fixed bug in Export HTML
* fixed naming problem with all save_as functions
* fixed bug in Export Logo in regard to start block

67

* added mime-type icon
* changed keyboard shortcuts to use Ctrl instead of Alt as per guidelines
* fixed bug re wait time (now in seconds)
* fixed problem with fractional wait times
* fixed i18n problem with labels in hover help
* reorganization of extras palette
* fixed problem of empty file with "Save as HTML" (saving screen capture)

66

* fixed bug preventing launch on (0.82-0.84)
* work around Rainbow problem with Save as image
* fixed bug re activate Stop Button on launch (thanks to rgs)
* added open from journal button (with rgs)
* fixed bug re Erase Button (hides status blocks)
* cleaned up some broken sample code

65

* fixed problem with View Toolbar
* moved Samples button to Help Toolbar

64

* major refactoring for new toolbar design
* stop sign turns off after execution is finished
* added preliminary support for mg and ta
* moved hover help to help toolbar
* adjusted artwork on Turtle palette

63

* more sample programs
* consolidated samples into one directory
* fixed mask bug that prevented palette hiding

62

* first pass at hover help support (thanks Raul)
* put samples button, keep button on project toolbar
* fixed journal icons associated with HTML, Python, Logo
* improved compatibility with old Sugar builds
* images centered under turtle
* text vertically centered under turtle
* pop blocks snap into boxes
* improved masks for fewer block-selection errors


61

* fixed es translation 
* fixed problem with save/load on old systems

60

* fixed sharing bug
* began work on 701 backward compatibility
* added more debugging code

59

* fixed leading bug for OLPC XO portfolio
* enabled box to hold strings and journal objects

58

* fixed unicode string compare in equal block
* fixed journal description bug introduced in v55
* fixed misaligned myfunc block problem


57

* lots of artwork clean up
* elimination of lock block
* more dead key clean ups
* truncated strings

56

* more dead key cleanup
* empty (undefined) box error message

55

* dead key workaround

54

* debug button
* no more decimals by default for print

53

* es updates

52

* first attempt at fixing the mimetypes
* default behavior of tamyblock.py is to draw a dotted line

51

* caught ISO_Level3_Shift problem on OLPC XO keyboard

50

* fixed some problems with taexportlogo
* cleaned up save/load icons
* print uses title for Journal objects
* cleaned up movie window destroy code
* more consistent template management internally
* support of a sort for show in taexporthtml

49

* fixed character input bug

48

* reworking of media blocks
* json cleanup

47

* image export
* pot update

46

* full screen mode
* scrolled window
* better support for running from the command line

45

* alt chars for keyboard shortcuts
* visual feedback for user-defined blocks when "loaded"

44

* adding user defineable block

43

* new de artwork

42

* removed unneeded Numeric dependencies

41

* end run around addons bug?

40

* improvements to it artwork

39

* improvements to nl and sv artwork

38

* improvements to de artwork

37

* adding de sl sv
* cleaned up SVGs

36

* added el, vi, zh_TW

35

* updated depreciated fields in activity.info
* added svg/*.py files to generate svgs from .po
* added nl

34

* added it; cleaned up fr; converted to cjson (with help from silbe)

33

* merge with TAPortfolio (and elimination of Sensor and myblock features)

32

* rebase on TAPortfolio code

31

* run and step

30

* fixed broken POT file

29

* new artwork, better i18n

28

* added push and pop (en only)

27

* add named boxes and stacks

26

* allow new blocks to be created by clicking in addition to drag and drop

25

* added sensor panel from TurtleArt with Sensors
* catch exceptions where DC Audio is not available (non-OLPC_XO-1 hardware) 

24

* add UCB logo export
* check for conditions where image cache needs refreshing

23

* caching images

22

* added POT file

21

* added ru
* fixed errors in fr and mn

20

* fixed translation problem with Spanish "poner en caja"
* PT translation
* height = toolbox.get_size()[1]
* setyx
* adding po files

19

* removed "sugar.activity import registry"

18

* Finnish
* SVG cleanup

17

* SVG support
* support for non-1200x900 displays

16

* Mongolian

15

* shebang patch

14

* Changed more file permissions (-x)
* Deleted some redundant files (stray myblockgroup.gif files)
* Add #!/usr/bin/env python to taturtle.py

13

* Added Turkish (tr) artwork
* Changed permissions on artwork (-x)

12

* Added sqrt function

11

* Rename activity from TurtleArt to Turtle Art (dlo trac #2663)
* Fix pen up in arc (dlo trac #7656)
* Point update url at a protected page.

10

* licensing information in activity.info (dlo trac #6340)
* new samples
* improved icon (dlo trac #6836)

9

* added french images
* fixed a few typos
* fixed divide by zero bug

8

* added license

7

* simple i18n

6

* Graphics changes

5

* Multi instance happy
